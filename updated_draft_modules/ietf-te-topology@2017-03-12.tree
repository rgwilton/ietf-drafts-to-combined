module: ietf-te-topology
  augment /nw:networks/nw:network/nw:network-types:
    +--rw te-topology!
  augment /nw:networks:
    +--rw te!
       +--rw templates
          +--rw node-template* [name] {template}?
          |  +--rw name                       te-types:te-template-name
          |  +--rw priority?                  uint16
          |  +--rw reference-change-policy?   enumeration
          |  +--rw te-node-attributes
          |     +--rw admin-status?        te-types:te-admin-status
          |     +--rw domain-id?           uint32
          |     +--rw is-abstract?         empty
          |     +--rw name?                inet:domain-name
          |     +--rw signaling-address*   inet:ip-address
          |     +--rw underlay-topology {te-topology-hierarchy}?
          |        +--rw network-ref?   -> /nw:networks/network/network-id
          +--rw link-template* [name] {template}?
             +--rw name                       te-types:te-template-name
             +--rw priority?                  uint16
             +--rw reference-change-policy?   enumeration
             +--rw te-link-attributes
                +--rw access-type?                      te-types:te-link-access-type
                +--rw external-domain
                |  +--rw network-ref?            -> /nw:networks/network/network-id
                |  +--rw remote-te-node-id?      te-types:te-node-id
                |  +--rw remote-te-link-tp-id?   te-types:te-tp-id
                |  +--rw plug-id?                uint32
                +--rw is-abstract?                      empty
                +--rw name?                             string
                +--rw underlay! {te-topology-hierarchy}?
                |  +--rw primary-path
                |  |  +--rw network-ref?    -> /nw:networks/network/network-id
                |  |  +--rw path-element* [path-element-id]
                |  |     +--rw path-element-id    uint32
                |  |     +--rw index?             uint32
                |  |     +--rw (type)?
                |  |        +--:(ip-address)
                |  |        |  +--rw ip-address-hop
                |  |        |     +--rw address?    inet:ip-address
                |  |        |     +--rw hop-type?   te-hop-type
                |  |        +--:(as-number)
                |  |        |  +--rw as-number-hop
                |  |        |     +--rw as-number?   binary
                |  |        |     +--rw hop-type?    te-hop-type
                |  |        +--:(unnumbered-link)
                |  |        |  +--rw unnumbered-hop
                |  |        |     +--rw router-id?      inet:ip-address
                |  |        |     +--rw interface-id?   uint32
                |  |        |     +--rw hop-type?       te-hop-type
                |  |        +--:(label)
                |  |        |  +--rw label-hop
                |  |        |     +--rw value?   rt-types:generalized-label
                |  |        +--:(sid)
                |  |           +--rw sid-hop
                |  |              +--rw sid?   rt-types:generalized-label
                |  +--rw backup-path* [index]
                |  |  +--rw index           uint32
                |  |  +--rw network-ref?    -> /nw:networks/network/network-id
                |  |  +--rw path-element* [path-element-id]
                |  |     +--rw path-element-id    uint32
                |  |     +--rw index?             uint32
                |  |     +--rw (type)?
                |  |        +--:(ip-address)
                |  |        |  +--rw ip-address-hop
                |  |        |     +--rw address?    inet:ip-address
                |  |        |     +--rw hop-type?   te-hop-type
                |  |        +--:(as-number)
                |  |        |  +--rw as-number-hop
                |  |        |     +--rw as-number?   binary
                |  |        |     +--rw hop-type?    te-hop-type
                |  |        +--:(unnumbered-link)
                |  |        |  +--rw unnumbered-hop
                |  |        |     +--rw router-id?      inet:ip-address
                |  |        |     +--rw interface-id?   uint32
                |  |        |     +--rw hop-type?       te-hop-type
                |  |        +--:(label)
                |  |        |  +--rw label-hop
                |  |        |     +--rw value?   rt-types:generalized-label
                |  |        +--:(sid)
                |  |           +--rw sid-hop
                |  |              +--rw sid?   rt-types:generalized-label
                |  +--rw protection-type?   uint16
                |  +--rw tunnels
                |     +--rw sharing?   boolean
                |     +--rw tunnel* [tunnel-name]
                |        +--rw tunnel-name    string
                |        +--rw sharing?       boolean
                +--rw admin-status?                     te-types:te-admin-status
                +--rw link-index?                       uint64
                +--rw administrative-group?             te-types:admin-groups
                +--rw interface-switching-capability* [switching-capability encoding]
                |  +--rw switching-capability    identityref
                |  +--rw encoding                identityref
                |  +--rw max-lsp-bandwidth* [priority]
                |     +--rw priority     uint8
                |     +--rw bandwidth?   te-bandwidth
                +--rw link-protection-type?             enumeration
                +--rw max-link-bandwidth?               te-bandwidth
                +--rw max-resv-link-bandwidth?          te-bandwidth
                +--rw unreserved-bandwidth* [priority]
                |  +--rw priority     uint8
                |  +--rw bandwidth?   te-bandwidth
                +--rw te-default-metric?                uint32
                +--rw te-delay-metric?                  uint32
                +--rw te-srlgs
                |  +--rw value*   te-types:srlg
                +--rw te-nsrlgs {nsrlg}?
                   +--rw id*   uint32
  augment /nw:networks/nw:network:
    +--rw provider-id?      te-types:te-global-id
    +--rw client-id?        te-types:te-global-id
    +--rw te-topology-id?   te-types:te-topology-id
    +--rw te!
       +--rw preference?               uint8
       +--rw optimization-criterion?   identityref
       +--rw nsrlg* [id] {nsrlg}?
       |  +--rw id              uint32
       |  +--rw disjointness?   te-path-disjointness
       +--ro geolocation
          +--ro altitude?    int64
          +--ro latitude?    geographic-coordinate-degree
          +--ro longitude?   geographic-coordinate-degree
  augment /nw:networks/nw:network/nw:node:
    +--rw te-node-id?   te-types:te-node-id
    +--rw te!
       +--rw te-node-template*            -> ../../../../te/templates/node-template/name {template}?
       +--rw te-node-attributes
       |  +--rw admin-status?            te-types:te-admin-status
       |  +--rw connectivity-matrices
       |  |  +--rw number-of-entries?         uint16
       |  |  +--rw is-allowed?                boolean
       |  |  +--rw label-restriction* [inclusive-exclusive label-start]
       |  |  |  +--rw inclusive-exclusive    enumeration
       |  |  |  +--rw label-start            rt-types:generalized-label
       |  |  |  +--rw label-end?             rt-types:generalized-label
       |  |  |  +--rw range-bitmap?          binary
       |  |  +--rw underlay! {te-topology-hierarchy}?
       |  |  |  +--rw primary-path
       |  |  |  |  +--rw network-ref?    -> /nw:networks/network/network-id
       |  |  |  |  +--rw path-element* [path-element-id]
       |  |  |  |     +--rw path-element-id    uint32
       |  |  |  |     +--rw index?             uint32
       |  |  |  |     +--rw (type)?
       |  |  |  |        +--:(ip-address)
       |  |  |  |        |  +--rw ip-address-hop
       |  |  |  |        |     +--rw address?    inet:ip-address
       |  |  |  |        |     +--rw hop-type?   te-hop-type
       |  |  |  |        +--:(as-number)
       |  |  |  |        |  +--rw as-number-hop
       |  |  |  |        |     +--rw as-number?   binary
       |  |  |  |        |     +--rw hop-type?    te-hop-type
       |  |  |  |        +--:(unnumbered-link)
       |  |  |  |        |  +--rw unnumbered-hop
       |  |  |  |        |     +--rw router-id?      inet:ip-address
       |  |  |  |        |     +--rw interface-id?   uint32
       |  |  |  |        |     +--rw hop-type?       te-hop-type
       |  |  |  |        +--:(label)
       |  |  |  |        |  +--rw label-hop
       |  |  |  |        |     +--rw value?   rt-types:generalized-label
       |  |  |  |        +--:(sid)
       |  |  |  |           +--rw sid-hop
       |  |  |  |              +--rw sid?   rt-types:generalized-label
       |  |  |  +--rw backup-path* [index]
       |  |  |  |  +--rw index           uint32
       |  |  |  |  +--rw network-ref?    -> /nw:networks/network/network-id
       |  |  |  |  +--rw path-element* [path-element-id]
       |  |  |  |     +--rw path-element-id    uint32
       |  |  |  |     +--rw index?             uint32
       |  |  |  |     +--rw (type)?
       |  |  |  |        +--:(ip-address)
       |  |  |  |        |  +--rw ip-address-hop
       |  |  |  |        |     +--rw address?    inet:ip-address
       |  |  |  |        |     +--rw hop-type?   te-hop-type
       |  |  |  |        +--:(as-number)
       |  |  |  |        |  +--rw as-number-hop
       |  |  |  |        |     +--rw as-number?   binary
       |  |  |  |        |     +--rw hop-type?    te-hop-type
       |  |  |  |        +--:(unnumbered-link)
       |  |  |  |        |  +--rw unnumbered-hop
       |  |  |  |        |     +--rw router-id?      inet:ip-address
       |  |  |  |        |     +--rw interface-id?   uint32
       |  |  |  |        |     +--rw hop-type?       te-hop-type
       |  |  |  |        +--:(label)
       |  |  |  |        |  +--rw label-hop
       |  |  |  |        |     +--rw value?   rt-types:generalized-label
       |  |  |  |        +--:(sid)
       |  |  |  |           +--rw sid-hop
       |  |  |  |              +--rw sid?   rt-types:generalized-label
       |  |  |  +--rw protection-type?   uint16
       |  |  |  +--rw tunnels
       |  |  |     +--rw sharing?   boolean
       |  |  |     +--rw tunnel* [tunnel-name]
       |  |  |        +--rw tunnel-name    string
       |  |  |        +--rw sharing?       boolean
       |  |  +--rw max-lsp-bandwidth* [priority]
       |  |  |  +--rw priority     uint8
       |  |  |  +--rw bandwidth?   te-bandwidth
       |  |  +--rw max-link-bandwidth?        te-bandwidth
       |  |  +--rw max-resv-link-bandwidth?   te-bandwidth
       |  |  +--rw unreserved-bandwidth* [priority]
       |  |  |  +--rw priority     uint8
       |  |  |  +--rw bandwidth?   te-bandwidth
       |  |  +--rw te-default-metric?         uint32
       |  |  +--rw te-delay-metric?           uint32
       |  |  +--rw te-srlgs
       |  |  |  +--rw value*   te-types:srlg
       |  |  +--rw te-nsrlgs {nsrlg}?
       |  |  |  +--rw id*   uint32
       |  |  +--rw connectivity-matrix* [id]
       |  |     +--rw id                         uint32
       |  |     +--rw from
       |  |     |  +--rw tp-ref?   -> ../../../../../../nt:termination-point/tp-id
       |  |     +--rw to
       |  |     |  +--rw tp-ref?   -> ../../../../../../nt:termination-point/tp-id
       |  |     +--rw is-allowed?                boolean
       |  |     +--rw label-restriction* [inclusive-exclusive label-start]
       |  |     |  +--rw inclusive-exclusive    enumeration
       |  |     |  +--rw label-start            rt-types:generalized-label
       |  |     |  +--rw label-end?             rt-types:generalized-label
       |  |     |  +--rw range-bitmap?          binary
       |  |     +--rw underlay! {te-topology-hierarchy}?
       |  |     |  +--rw primary-path
       |  |     |  |  +--rw network-ref?    -> /nw:networks/network/network-id
       |  |     |  |  +--rw path-element* [path-element-id]
       |  |     |  |     +--rw path-element-id    uint32
       |  |     |  |     +--rw index?             uint32
       |  |     |  |     +--rw (type)?
       |  |     |  |        +--:(ip-address)
       |  |     |  |        |  +--rw ip-address-hop
       |  |     |  |        |     +--rw address?    inet:ip-address
       |  |     |  |        |     +--rw hop-type?   te-hop-type
       |  |     |  |        +--:(as-number)
       |  |     |  |        |  +--rw as-number-hop
       |  |     |  |        |     +--rw as-number?   binary
       |  |     |  |        |     +--rw hop-type?    te-hop-type
       |  |     |  |        +--:(unnumbered-link)
       |  |     |  |        |  +--rw unnumbered-hop
       |  |     |  |        |     +--rw router-id?      inet:ip-address
       |  |     |  |        |     +--rw interface-id?   uint32
       |  |     |  |        |     +--rw hop-type?       te-hop-type
       |  |     |  |        +--:(label)
       |  |     |  |        |  +--rw label-hop
       |  |     |  |        |     +--rw value?   rt-types:generalized-label
       |  |     |  |        +--:(sid)
       |  |     |  |           +--rw sid-hop
       |  |     |  |              +--rw sid?   rt-types:generalized-label
       |  |     |  +--rw backup-path* [index]
       |  |     |  |  +--rw index           uint32
       |  |     |  |  +--rw network-ref?    -> /nw:networks/network/network-id
       |  |     |  |  +--rw path-element* [path-element-id]
       |  |     |  |     +--rw path-element-id    uint32
       |  |     |  |     +--rw index?             uint32
       |  |     |  |     +--rw (type)?
       |  |     |  |        +--:(ip-address)
       |  |     |  |        |  +--rw ip-address-hop
       |  |     |  |        |     +--rw address?    inet:ip-address
       |  |     |  |        |     +--rw hop-type?   te-hop-type
       |  |     |  |        +--:(as-number)
       |  |     |  |        |  +--rw as-number-hop
       |  |     |  |        |     +--rw as-number?   binary
       |  |     |  |        |     +--rw hop-type?    te-hop-type
       |  |     |  |        +--:(unnumbered-link)
       |  |     |  |        |  +--rw unnumbered-hop
       |  |     |  |        |     +--rw router-id?      inet:ip-address
       |  |     |  |        |     +--rw interface-id?   uint32
       |  |     |  |        |     +--rw hop-type?       te-hop-type
       |  |     |  |        +--:(label)
       |  |     |  |        |  +--rw label-hop
       |  |     |  |        |     +--rw value?   rt-types:generalized-label
       |  |     |  |        +--:(sid)
       |  |     |  |           +--rw sid-hop
       |  |     |  |              +--rw sid?   rt-types:generalized-label
       |  |     |  +--rw protection-type?   uint16
       |  |     |  +--rw tunnels
       |  |     |     +--rw sharing?   boolean
       |  |     |     +--rw tunnel* [tunnel-name]
       |  |     |        +--rw tunnel-name    string
       |  |     |        +--rw sharing?       boolean
       |  |     +--rw max-lsp-bandwidth* [priority]
       |  |     |  +--rw priority     uint8
       |  |     |  +--rw bandwidth?   te-bandwidth
       |  |     +--rw max-link-bandwidth?        te-bandwidth
       |  |     +--rw max-resv-link-bandwidth?   te-bandwidth
       |  |     +--rw unreserved-bandwidth* [priority]
       |  |     |  +--rw priority     uint8
       |  |     |  +--rw bandwidth?   te-bandwidth
       |  |     +--rw te-default-metric?         uint32
       |  |     +--rw te-delay-metric?           uint32
       |  |     +--rw te-srlgs
       |  |     |  +--rw value*   te-types:srlg
       |  |     +--rw te-nsrlgs {nsrlg}?
       |  |        +--rw id*   uint32
       |  +--rw domain-id?               uint32
       |  +--rw is-abstract?             empty
       |  +--rw name?                    inet:domain-name
       |  +--rw signaling-address*       inet:ip-address
       |  +--rw underlay-topology {te-topology-hierarchy}?
       |     +--rw network-ref?   -> /nw:networks/network/network-id
       +--ro oper-status?                 te-types:te-oper-status
       +--ro geolocation
       |  +--ro altitude?    int64
       |  +--ro latitude?    geographic-coordinate-degree
       |  +--ro longitude?   geographic-coordinate-degree
       +--ro is-multi-access-dr?          empty
       +--ro information-source-origin?   te-info-source
       +--ro information-source
       |  +--ro credibility-preference?    uint16
       |  +--ro logical-network-element?   string
       |  +--ro network-instance?          string
       |  +--ro topology
       |     +--ro network-ref?   -> /nw:networks/network/network-id
       |     +--ro node-ref?      -> /nw:networks/network[nw:network-id = current()/../network-ref]/node/node-id
       +--ro information-source-entry* [information-source-origin]
       |  +--ro information-source-origin    te-info-source
       |  +--ro information-source
       |  |  +--ro credibility-preference?    uint16
       |  |  +--ro logical-network-element?   string
       |  |  +--ro network-instance?          string
       |  |  +--ro topology
       |  |     +--ro network-ref?   -> /nw:networks/network/network-id
       |  |     +--ro node-ref?      -> /nw:networks/network[nw:network-id = current()/../network-ref]/node/node-id
       |  +--ro connectivity-matrices
       |  |  +--ro number-of-entries?         uint16
       |  |  +--ro is-allowed?                boolean
       |  |  +--ro label-restriction* [inclusive-exclusive label-start]
       |  |  |  +--ro inclusive-exclusive    enumeration
       |  |  |  +--ro label-start            rt-types:generalized-label
       |  |  |  +--ro label-end?             rt-types:generalized-label
       |  |  |  +--ro range-bitmap?          binary
       |  |  +--ro underlay! {te-topology-hierarchy}?
       |  |  |  +--ro primary-path
       |  |  |  |  +--ro network-ref?    -> /nw:networks/network/network-id
       |  |  |  |  +--ro path-element* [path-element-id]
       |  |  |  |     +--ro path-element-id    uint32
       |  |  |  |     +--ro index?             uint32
       |  |  |  |     +--ro (type)?
       |  |  |  |        +--:(ip-address)
       |  |  |  |        |  +--ro ip-address-hop
       |  |  |  |        |     +--ro address?    inet:ip-address
       |  |  |  |        |     +--ro hop-type?   te-hop-type
       |  |  |  |        +--:(as-number)
       |  |  |  |        |  +--ro as-number-hop
       |  |  |  |        |     +--ro as-number?   binary
       |  |  |  |        |     +--ro hop-type?    te-hop-type
       |  |  |  |        +--:(unnumbered-link)
       |  |  |  |        |  +--ro unnumbered-hop
       |  |  |  |        |     +--ro router-id?      inet:ip-address
       |  |  |  |        |     +--ro interface-id?   uint32
       |  |  |  |        |     +--ro hop-type?       te-hop-type
       |  |  |  |        +--:(label)
       |  |  |  |        |  +--ro label-hop
       |  |  |  |        |     +--ro value?   rt-types:generalized-label
       |  |  |  |        +--:(sid)
       |  |  |  |           +--ro sid-hop
       |  |  |  |              +--ro sid?   rt-types:generalized-label
       |  |  |  +--ro backup-path* [index]
       |  |  |  |  +--ro index           uint32
       |  |  |  |  +--ro network-ref?    -> /nw:networks/network/network-id
       |  |  |  |  +--ro path-element* [path-element-id]
       |  |  |  |     +--ro path-element-id    uint32
       |  |  |  |     +--ro index?             uint32
       |  |  |  |     +--ro (type)?
       |  |  |  |        +--:(ip-address)
       |  |  |  |        |  +--ro ip-address-hop
       |  |  |  |        |     +--ro address?    inet:ip-address
       |  |  |  |        |     +--ro hop-type?   te-hop-type
       |  |  |  |        +--:(as-number)
       |  |  |  |        |  +--ro as-number-hop
       |  |  |  |        |     +--ro as-number?   binary
       |  |  |  |        |     +--ro hop-type?    te-hop-type
       |  |  |  |        +--:(unnumbered-link)
       |  |  |  |        |  +--ro unnumbered-hop
       |  |  |  |        |     +--ro router-id?      inet:ip-address
       |  |  |  |        |     +--ro interface-id?   uint32
       |  |  |  |        |     +--ro hop-type?       te-hop-type
       |  |  |  |        +--:(label)
       |  |  |  |        |  +--ro label-hop
       |  |  |  |        |     +--ro value?   rt-types:generalized-label
       |  |  |  |        +--:(sid)
       |  |  |  |           +--ro sid-hop
       |  |  |  |              +--ro sid?   rt-types:generalized-label
       |  |  |  +--ro protection-type?   uint16
       |  |  |  +--ro tunnels
       |  |  |     +--ro sharing?   boolean
       |  |  |     +--ro tunnel* [tunnel-name]
       |  |  |        +--ro tunnel-name    string
       |  |  |        +--ro sharing?       boolean
       |  |  +--ro max-lsp-bandwidth* [priority]
       |  |  |  +--ro priority     uint8
       |  |  |  +--ro bandwidth?   te-bandwidth
       |  |  +--ro max-link-bandwidth?        te-bandwidth
       |  |  +--ro max-resv-link-bandwidth?   te-bandwidth
       |  |  +--ro unreserved-bandwidth* [priority]
       |  |  |  +--ro priority     uint8
       |  |  |  +--ro bandwidth?   te-bandwidth
       |  |  +--ro te-default-metric?         uint32
       |  |  +--ro te-delay-metric?           uint32
       |  |  +--ro te-srlgs
       |  |  |  +--ro value*   te-types:srlg
       |  |  +--ro te-nsrlgs {nsrlg}?
       |  |  |  +--ro id*   uint32
       |  |  +--ro connectivity-matrix* [id]
       |  |     +--ro id                         uint32
       |  |     +--ro from
       |  |     |  +--ro tp-ref?   -> ../../../../../../nt:termination-point/tp-id
       |  |     +--ro to
       |  |     |  +--ro tp-ref?   -> ../../../../../../nt:termination-point/tp-id
       |  |     +--ro is-allowed?                boolean
       |  |     +--ro label-restriction* [inclusive-exclusive label-start]
       |  |     |  +--ro inclusive-exclusive    enumeration
       |  |     |  +--ro label-start            rt-types:generalized-label
       |  |     |  +--ro label-end?             rt-types:generalized-label
       |  |     |  +--ro range-bitmap?          binary
       |  |     +--ro underlay! {te-topology-hierarchy}?
       |  |     |  +--ro primary-path
       |  |     |  |  +--ro network-ref?    -> /nw:networks/network/network-id
       |  |     |  |  +--ro path-element* [path-element-id]
       |  |     |  |     +--ro path-element-id    uint32
       |  |     |  |     +--ro index?             uint32
       |  |     |  |     +--ro (type)?
       |  |     |  |        +--:(ip-address)
       |  |     |  |        |  +--ro ip-address-hop
       |  |     |  |        |     +--ro address?    inet:ip-address
       |  |     |  |        |     +--ro hop-type?   te-hop-type
       |  |     |  |        +--:(as-number)
       |  |     |  |        |  +--ro as-number-hop
       |  |     |  |        |     +--ro as-number?   binary
       |  |     |  |        |     +--ro hop-type?    te-hop-type
       |  |     |  |        +--:(unnumbered-link)
       |  |     |  |        |  +--ro unnumbered-hop
       |  |     |  |        |     +--ro router-id?      inet:ip-address
       |  |     |  |        |     +--ro interface-id?   uint32
       |  |     |  |        |     +--ro hop-type?       te-hop-type
       |  |     |  |        +--:(label)
       |  |     |  |        |  +--ro label-hop
       |  |     |  |        |     +--ro value?   rt-types:generalized-label
       |  |     |  |        +--:(sid)
       |  |     |  |           +--ro sid-hop
       |  |     |  |              +--ro sid?   rt-types:generalized-label
       |  |     |  +--ro backup-path* [index]
       |  |     |  |  +--ro index           uint32
       |  |     |  |  +--ro network-ref?    -> /nw:networks/network/network-id
       |  |     |  |  +--ro path-element* [path-element-id]
       |  |     |  |     +--ro path-element-id    uint32
       |  |     |  |     +--ro index?             uint32
       |  |     |  |     +--ro (type)?
       |  |     |  |        +--:(ip-address)
       |  |     |  |        |  +--ro ip-address-hop
       |  |     |  |        |     +--ro address?    inet:ip-address
       |  |     |  |        |     +--ro hop-type?   te-hop-type
       |  |     |  |        +--:(as-number)
       |  |     |  |        |  +--ro as-number-hop
       |  |     |  |        |     +--ro as-number?   binary
       |  |     |  |        |     +--ro hop-type?    te-hop-type
       |  |     |  |        +--:(unnumbered-link)
       |  |     |  |        |  +--ro unnumbered-hop
       |  |     |  |        |     +--ro router-id?      inet:ip-address
       |  |     |  |        |     +--ro interface-id?   uint32
       |  |     |  |        |     +--ro hop-type?       te-hop-type
       |  |     |  |        +--:(label)
       |  |     |  |        |  +--ro label-hop
       |  |     |  |        |     +--ro value?   rt-types:generalized-label
       |  |     |  |        +--:(sid)
       |  |     |  |           +--ro sid-hop
       |  |     |  |              +--ro sid?   rt-types:generalized-label
       |  |     |  +--ro protection-type?   uint16
       |  |     |  +--ro tunnels
       |  |     |     +--ro sharing?   boolean
       |  |     |     +--ro tunnel* [tunnel-name]
       |  |     |        +--ro tunnel-name    string
       |  |     |        +--ro sharing?       boolean
       |  |     +--ro max-lsp-bandwidth* [priority]
       |  |     |  +--ro priority     uint8
       |  |     |  +--ro bandwidth?   te-bandwidth
       |  |     +--ro max-link-bandwidth?        te-bandwidth
       |  |     +--ro max-resv-link-bandwidth?   te-bandwidth
       |  |     +--ro unreserved-bandwidth* [priority]
       |  |     |  +--ro priority     uint8
       |  |     |  +--ro bandwidth?   te-bandwidth
       |  |     +--ro te-default-metric?         uint32
       |  |     +--ro te-delay-metric?           uint32
       |  |     +--ro te-srlgs
       |  |     |  +--ro value*   te-types:srlg
       |  |     +--ro te-nsrlgs {nsrlg}?
       |  |        +--ro id*   uint32
       |  +--ro domain-id?                   uint32
       |  +--ro is-abstract?                 empty
       |  +--ro name?                        inet:domain-name
       |  +--ro signaling-address*           inet:ip-address
       |  +--ro underlay-topology {te-topology-hierarchy}?
       |     +--ro network-ref?   -> /nw:networks/network/network-id
       +--ro statistics
       |  +--ro discontinuity-time           yang:date-and-time
       |  +--ro node
       |  |  +--ro disables?             yang:counter32
       |  |  +--ro enables?              yang:counter32
       |  |  +--ro maintenance-sets?     yang:counter32
       |  |  +--ro maintenance-clears?   yang:counter32
       |  |  +--ro modifies?             yang:counter32
       |  +--ro connectivity-matrix-entry
       |     +--ro creates?    yang:counter32
       |     +--ro deletes?    yang:counter32
       |     +--ro disables?   yang:counter32
       |     +--ro enables?    yang:counter32
       |     +--ro modifies?   yang:counter32
       +--rw tunnel-termination-point* [tunnel-tp-id]
          +--rw tunnel-tp-id                           binary
          +--rw switching-capability?                  identityref
          +--rw encoding?                              identityref
          +--rw inter-layer-lock-id?                   uint32
          +--rw protection-type?                       identityref
          +--rw client-layer-adaptation
          |  +--rw switching-capability* [switching-capability encoding]
          |     +--rw switching-capability    identityref
          |     +--rw encoding                identityref
          |     +--rw bandwidth?              te-bandwidth
          +--rw local-link-connectivities
          |  +--rw number-of-entries?         uint16
          |  +--rw is-allowed?                boolean
          |  +--rw label-restriction* [inclusive-exclusive label-start]
          |  |  +--rw inclusive-exclusive    enumeration
          |  |  +--rw label-start            rt-types:generalized-label
          |  |  +--rw label-end?             rt-types:generalized-label
          |  |  +--rw range-bitmap?          binary
          |  +--rw underlay! {te-topology-hierarchy}?
          |  |  +--rw primary-path
          |  |  |  +--rw network-ref?    -> /nw:networks/network/network-id
          |  |  |  +--rw path-element* [path-element-id]
          |  |  |     +--rw path-element-id    uint32
          |  |  |     +--rw index?             uint32
          |  |  |     +--rw (type)?
          |  |  |        +--:(ip-address)
          |  |  |        |  +--rw ip-address-hop
          |  |  |        |     +--rw address?    inet:ip-address
          |  |  |        |     +--rw hop-type?   te-hop-type
          |  |  |        +--:(as-number)
          |  |  |        |  +--rw as-number-hop
          |  |  |        |     +--rw as-number?   binary
          |  |  |        |     +--rw hop-type?    te-hop-type
          |  |  |        +--:(unnumbered-link)
          |  |  |        |  +--rw unnumbered-hop
          |  |  |        |     +--rw router-id?      inet:ip-address
          |  |  |        |     +--rw interface-id?   uint32
          |  |  |        |     +--rw hop-type?       te-hop-type
          |  |  |        +--:(label)
          |  |  |        |  +--rw label-hop
          |  |  |        |     +--rw value?   rt-types:generalized-label
          |  |  |        +--:(sid)
          |  |  |           +--rw sid-hop
          |  |  |              +--rw sid?   rt-types:generalized-label
          |  |  +--rw backup-path* [index]
          |  |  |  +--rw index           uint32
          |  |  |  +--rw network-ref?    -> /nw:networks/network/network-id
          |  |  |  +--rw path-element* [path-element-id]
          |  |  |     +--rw path-element-id    uint32
          |  |  |     +--rw index?             uint32
          |  |  |     +--rw (type)?
          |  |  |        +--:(ip-address)
          |  |  |        |  +--rw ip-address-hop
          |  |  |        |     +--rw address?    inet:ip-address
          |  |  |        |     +--rw hop-type?   te-hop-type
          |  |  |        +--:(as-number)
          |  |  |        |  +--rw as-number-hop
          |  |  |        |     +--rw as-number?   binary
          |  |  |        |     +--rw hop-type?    te-hop-type
          |  |  |        +--:(unnumbered-link)
          |  |  |        |  +--rw unnumbered-hop
          |  |  |        |     +--rw router-id?      inet:ip-address
          |  |  |        |     +--rw interface-id?   uint32
          |  |  |        |     +--rw hop-type?       te-hop-type
          |  |  |        +--:(label)
          |  |  |        |  +--rw label-hop
          |  |  |        |     +--rw value?   rt-types:generalized-label
          |  |  |        +--:(sid)
          |  |  |           +--rw sid-hop
          |  |  |              +--rw sid?   rt-types:generalized-label
          |  |  +--rw protection-type?   uint16
          |  |  +--rw tunnels
          |  |     +--rw sharing?   boolean
          |  |     +--rw tunnel* [tunnel-name]
          |  |        +--rw tunnel-name    string
          |  |        +--rw sharing?       boolean
          |  +--rw max-lsp-bandwidth* [priority]
          |  |  +--rw priority     uint8
          |  |  +--rw bandwidth?   te-bandwidth
          |  +--rw max-link-bandwidth?        te-bandwidth
          |  +--rw max-resv-link-bandwidth?   te-bandwidth
          |  +--rw unreserved-bandwidth* [priority]
          |  |  +--rw priority     uint8
          |  |  +--rw bandwidth?   te-bandwidth
          |  +--rw te-default-metric?         uint32
          |  +--rw te-delay-metric?           uint32
          |  +--rw te-srlgs
          |  |  +--rw value*   te-types:srlg
          |  +--rw te-nsrlgs {nsrlg}?
          |  |  +--rw id*   uint32
          |  +--rw local-link-connectivity* [link-tp-ref]
          |     +--rw link-tp-ref                -> ../../../../../nt:termination-point/tp-id
          |     +--rw is-allowed?                boolean
          |     +--rw label-restriction* [inclusive-exclusive label-start]
          |     |  +--rw inclusive-exclusive    enumeration
          |     |  +--rw label-start            rt-types:generalized-label
          |     |  +--rw label-end?             rt-types:generalized-label
          |     |  +--rw range-bitmap?          binary
          |     +--rw underlay! {te-topology-hierarchy}?
          |     |  +--rw primary-path
          |     |  |  +--rw network-ref?    -> /nw:networks/network/network-id
          |     |  |  +--rw path-element* [path-element-id]
          |     |  |     +--rw path-element-id    uint32
          |     |  |     +--rw index?             uint32
          |     |  |     +--rw (type)?
          |     |  |        +--:(ip-address)
          |     |  |        |  +--rw ip-address-hop
          |     |  |        |     +--rw address?    inet:ip-address
          |     |  |        |     +--rw hop-type?   te-hop-type
          |     |  |        +--:(as-number)
          |     |  |        |  +--rw as-number-hop
          |     |  |        |     +--rw as-number?   binary
          |     |  |        |     +--rw hop-type?    te-hop-type
          |     |  |        +--:(unnumbered-link)
          |     |  |        |  +--rw unnumbered-hop
          |     |  |        |     +--rw router-id?      inet:ip-address
          |     |  |        |     +--rw interface-id?   uint32
          |     |  |        |     +--rw hop-type?       te-hop-type
          |     |  |        +--:(label)
          |     |  |        |  +--rw label-hop
          |     |  |        |     +--rw value?   rt-types:generalized-label
          |     |  |        +--:(sid)
          |     |  |           +--rw sid-hop
          |     |  |              +--rw sid?   rt-types:generalized-label
          |     |  +--rw backup-path* [index]
          |     |  |  +--rw index           uint32
          |     |  |  +--rw network-ref?    -> /nw:networks/network/network-id
          |     |  |  +--rw path-element* [path-element-id]
          |     |  |     +--rw path-element-id    uint32
          |     |  |     +--rw index?             uint32
          |     |  |     +--rw (type)?
          |     |  |        +--:(ip-address)
          |     |  |        |  +--rw ip-address-hop
          |     |  |        |     +--rw address?    inet:ip-address
          |     |  |        |     +--rw hop-type?   te-hop-type
          |     |  |        +--:(as-number)
          |     |  |        |  +--rw as-number-hop
          |     |  |        |     +--rw as-number?   binary
          |     |  |        |     +--rw hop-type?    te-hop-type
          |     |  |        +--:(unnumbered-link)
          |     |  |        |  +--rw unnumbered-hop
          |     |  |        |     +--rw router-id?      inet:ip-address
          |     |  |        |     +--rw interface-id?   uint32
          |     |  |        |     +--rw hop-type?       te-hop-type
          |     |  |        +--:(label)
          |     |  |        |  +--rw label-hop
          |     |  |        |     +--rw value?   rt-types:generalized-label
          |     |  |        +--:(sid)
          |     |  |           +--rw sid-hop
          |     |  |              +--rw sid?   rt-types:generalized-label
          |     |  +--rw protection-type?   uint16
          |     |  +--rw tunnels
          |     |     +--rw sharing?   boolean
          |     |     +--rw tunnel* [tunnel-name]
          |     |        +--rw tunnel-name    string
          |     |        +--rw sharing?       boolean
          |     +--rw max-lsp-bandwidth* [priority]
          |     |  +--rw priority     uint8
          |     |  +--rw bandwidth?   te-bandwidth
          |     +--rw max-link-bandwidth?        te-bandwidth
          |     +--rw max-resv-link-bandwidth?   te-bandwidth
          |     +--rw unreserved-bandwidth* [priority]
          |     |  +--rw priority     uint8
          |     |  +--rw bandwidth?   te-bandwidth
          |     +--rw te-default-metric?         uint32
          |     +--rw te-delay-metric?           uint32
          |     +--rw te-srlgs
          |     |  +--rw value*   te-types:srlg
          |     +--rw te-nsrlgs {nsrlg}?
          |        +--rw id*   uint32
          +--ro geolocation
          |  +--ro altitude?    int64
          |  +--ro latitude?    geographic-coordinate-degree
          |  +--ro longitude?   geographic-coordinate-degree
          +--ro statistics
          |  +--ro discontinuity-time          yang:date-and-time
          |  +--ro tunnel-termination-point
          |  |  +--ro disables?             yang:counter32
          |  |  +--ro enables?              yang:counter32
          |  |  +--ro maintenance-clears?   yang:counter32
          |  |  +--ro maintenance-sets?     yang:counter32
          |  |  +--ro modifies?             yang:counter32
          |  |  +--ro downs?                yang:counter32
          |  |  +--ro ups?                  yang:counter32
          |  |  +--ro in-service-clears?    yang:counter32
          |  |  +--ro in-service-sets?      yang:counter32
          |  +--ro local-link-connectivity
          |     +--ro creates?    yang:counter32
          |     +--ro deletes?    yang:counter32
          |     +--ro disables?   yang:counter32
          |     +--ro enables?    yang:counter32
          |     +--ro modifies?   yang:counter32
          +--rw supporting-tunnel-termination-point* [node-ref tunnel-tp-ref]
             +--rw node-ref         inet:uri
             +--rw tunnel-tp-ref    binary
  augment /nw:networks/nw:network/nt:link:
    +--rw te!
       +--rw (bundle-stack-level)?
       |  +--:(bundle)
       |  |  +--rw bundled-links
       |  |     +--rw bundled-link* [sequence]
       |  |        +--rw sequence      uint32
       |  |        +--rw src-tp-ref?   -> ../../../../../nw:node[nw:node-id = current()/../../../../nt:source/source-node]/termination-point/tp-id
       |  |        +--rw des-tp-ref?   -> ../../../../../nw:node[nw:node-id = current()/../../../../nt:destination/dest-node]/termination-point/tp-id
       |  +--:(component)
       |     +--rw component-links
       |        +--rw component-link* [sequence]
       |           +--rw sequence             uint32
       |           +--rw src-interface-ref?   string
       |           +--rw des-interface-ref?   string
       +--rw te-link-template*            -> ../../../../te/templates/link-template/name {template}?
       +--rw te-link-attributes
       |  +--rw access-type?                      te-types:te-link-access-type
       |  +--rw external-domain
       |  |  +--rw network-ref?            -> /nw:networks/network/network-id
       |  |  +--rw remote-te-node-id?      te-types:te-node-id
       |  |  +--rw remote-te-link-tp-id?   te-types:te-tp-id
       |  |  +--rw plug-id?                uint32
       |  +--rw is-abstract?                      empty
       |  +--rw name?                             string
       |  +--rw underlay! {te-topology-hierarchy}?
       |  |  +--rw primary-path
       |  |  |  +--rw network-ref?    -> /nw:networks/network/network-id
       |  |  |  +--rw path-element* [path-element-id]
       |  |  |     +--rw path-element-id    uint32
       |  |  |     +--rw index?             uint32
       |  |  |     +--rw (type)?
       |  |  |        +--:(ip-address)
       |  |  |        |  +--rw ip-address-hop
       |  |  |        |     +--rw address?    inet:ip-address
       |  |  |        |     +--rw hop-type?   te-hop-type
       |  |  |        +--:(as-number)
       |  |  |        |  +--rw as-number-hop
       |  |  |        |     +--rw as-number?   binary
       |  |  |        |     +--rw hop-type?    te-hop-type
       |  |  |        +--:(unnumbered-link)
       |  |  |        |  +--rw unnumbered-hop
       |  |  |        |     +--rw router-id?      inet:ip-address
       |  |  |        |     +--rw interface-id?   uint32
       |  |  |        |     +--rw hop-type?       te-hop-type
       |  |  |        +--:(label)
       |  |  |        |  +--rw label-hop
       |  |  |        |     +--rw value?   rt-types:generalized-label
       |  |  |        +--:(sid)
       |  |  |           +--rw sid-hop
       |  |  |              +--rw sid?   rt-types:generalized-label
       |  |  +--rw backup-path* [index]
       |  |  |  +--rw index           uint32
       |  |  |  +--rw network-ref?    -> /nw:networks/network/network-id
       |  |  |  +--rw path-element* [path-element-id]
       |  |  |     +--rw path-element-id    uint32
       |  |  |     +--rw index?             uint32
       |  |  |     +--rw (type)?
       |  |  |        +--:(ip-address)
       |  |  |        |  +--rw ip-address-hop
       |  |  |        |     +--rw address?    inet:ip-address
       |  |  |        |     +--rw hop-type?   te-hop-type
       |  |  |        +--:(as-number)
       |  |  |        |  +--rw as-number-hop
       |  |  |        |     +--rw as-number?   binary
       |  |  |        |     +--rw hop-type?    te-hop-type
       |  |  |        +--:(unnumbered-link)
       |  |  |        |  +--rw unnumbered-hop
       |  |  |        |     +--rw router-id?      inet:ip-address
       |  |  |        |     +--rw interface-id?   uint32
       |  |  |        |     +--rw hop-type?       te-hop-type
       |  |  |        +--:(label)
       |  |  |        |  +--rw label-hop
       |  |  |        |     +--rw value?   rt-types:generalized-label
       |  |  |        +--:(sid)
       |  |  |           +--rw sid-hop
       |  |  |              +--rw sid?   rt-types:generalized-label
       |  |  +--rw protection-type?   uint16
       |  |  +--rw tunnels
       |  |     +--rw sharing?   boolean
       |  |     +--rw tunnel* [tunnel-name]
       |  |        +--rw tunnel-name    string
       |  |        +--rw sharing?       boolean
       |  +--rw admin-status?                     te-types:te-admin-status
       |  +--rw link-index?                       uint64
       |  +--rw administrative-group?             te-types:admin-groups
       |  +--rw interface-switching-capability* [switching-capability encoding]
       |  |  +--rw switching-capability    identityref
       |  |  +--rw encoding                identityref
       |  |  +--rw max-lsp-bandwidth* [priority]
       |  |     +--rw priority     uint8
       |  |     +--rw bandwidth?   te-bandwidth
       |  +--rw link-protection-type?             enumeration
       |  +--rw max-link-bandwidth?               te-bandwidth
       |  +--rw max-resv-link-bandwidth?          te-bandwidth
       |  +--rw unreserved-bandwidth* [priority]
       |  |  +--rw priority     uint8
       |  |  +--rw bandwidth?   te-bandwidth
       |  +--rw te-default-metric?                uint32
       |  +--rw te-delay-metric?                  uint32
       |  +--rw te-srlgs
       |  |  +--rw value*   te-types:srlg
       |  +--rw te-nsrlgs {nsrlg}?
       |     +--rw id*   uint32
       +--ro oper-status?                 te-types:te-oper-status
       +--ro is-transitional?             empty
       +--ro information-source-origin?   te-info-source
       +--ro information-source
       |  +--ro credibility-preference?    uint16
       |  +--ro logical-network-element?   string
       |  +--ro network-instance?          string
       |  +--ro topology
       |     +--ro network-ref?   -> /nw:networks/network/network-id
       |     +--ro link-ref?      -> /nw:networks/network[nw:network-id = current()/../network-ref]/nt:link/link-id
       +--ro information-source-entry* [information-source-origin]
       |  +--ro information-source-origin         te-info-source
       |  +--ro information-source
       |  |  +--ro credibility-preference?    uint16
       |  |  +--ro logical-network-element?   string
       |  |  +--ro network-instance?          string
       |  |  +--ro topology
       |  |     +--ro network-ref?   -> /nw:networks/network/network-id
       |  |     +--ro link-ref?      -> /nw:networks/network[nw:network-id = current()/../network-ref]/nt:link/link-id
       |  +--ro link-index?                       uint64
       |  +--ro administrative-group?             te-types:admin-groups
       |  +--ro interface-switching-capability* [switching-capability encoding]
       |  |  +--ro switching-capability    identityref
       |  |  +--ro encoding                identityref
       |  |  +--ro max-lsp-bandwidth* [priority]
       |  |     +--ro priority     uint8
       |  |     +--ro bandwidth?   te-bandwidth
       |  +--ro link-protection-type?             enumeration
       |  +--ro max-link-bandwidth?               te-bandwidth
       |  +--ro max-resv-link-bandwidth?          te-bandwidth
       |  +--ro unreserved-bandwidth* [priority]
       |  |  +--ro priority     uint8
       |  |  +--ro bandwidth?   te-bandwidth
       |  +--ro te-default-metric?                uint32
       |  +--ro te-delay-metric?                  uint32
       |  +--ro te-srlgs
       |  |  +--ro value*   te-types:srlg
       |  +--ro te-nsrlgs {nsrlg}?
       |     +--ro id*   uint32
       +--ro recovery
       |  +--ro restoration-status?   te-types:te-recovery-status
       |  +--ro protection-status?    te-types:te-recovery-status
       +--ro underlay {te-topology-hierarchy}?
       |  +--ro dynamic?     boolean
       |  +--ro committed?   boolean
       +--ro statistics
          +--ro discontinuity-time                 yang:date-and-time
          +--ro disables?                          yang:counter32
          +--ro enables?                           yang:counter32
          +--ro maintenance-clears?                yang:counter32
          +--ro maintenance-sets?                  yang:counter32
          +--ro modifies?                          yang:counter32
          +--ro downs?                             yang:counter32
          +--ro ups?                               yang:counter32
          +--ro fault-clears?                      yang:counter32
          +--ro fault-detects?                     yang:counter32
          +--ro protection-switches?               yang:counter32
          +--ro protection-reverts?                yang:counter32
          +--ro restoration-failures?              yang:counter32
          +--ro restoration-starts?                yang:counter32
          +--ro restoration-successes?             yang:counter32
          +--ro restoration-reversion-failures?    yang:counter32
          +--ro restoration-reversion-starts?      yang:counter32
          +--ro restoration-reversion-successes?   yang:counter32
  augment /nw:networks/nw:network/nw:node/nt:termination-point:
    +--rw te-tp-id?   te-types:te-tp-id
    +--rw te!
       +--rw interface-switching-capability* [switching-capability encoding]
       |  +--rw switching-capability    identityref
       |  +--rw encoding                identityref
       |  +--rw max-lsp-bandwidth* [priority]
       |     +--rw priority     uint8
       |     +--rw bandwidth?   te-bandwidth
       +--rw inter-layer-lock-id?              uint32
       +--ro geolocation
          +--ro altitude?    int64
          +--ro latitude?    geographic-coordinate-degree
          +--ro longitude?   geographic-coordinate-degree
